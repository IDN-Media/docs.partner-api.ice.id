openapi: 3.0.0

info:
  title: ICE Partner API
  description: |
    ICE Partner API Documentation

    ---

    To be used by ICE partners to create and manage business users and campaigns for their
    business users.

    Partner must first obtain access_token using OAuth2 Client Credential then
    use the access_token to access the other endpoints.

    Tags represent as a group which use on the scope access

    For testing purposes, you may use the Alpha (testing) server with client_id xxxxxx
    and client_secret xxxxx.

  version: 2.0.0
  contact:
    email: developer@idntimes.com
servers:
- url: https://partner-api.estidar.com/api/v2
  description: Beta (staging)
- url: https://partner-api.ice.id/api/v2
  description: Production (live data)
paths:
  /auth/token:
    post:
      tags:
      - Authentication
      summary: "Get bearer token"
      description: |
        API to get bearer token for accessing all ICE Partner API
      operationId: "postAuth"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grantType:
                  type: string
                  description: Set this to 'client_credentials'
                  example: client_credentials
                clientId:
                  description: Your application's client_id
                  type: string
                  example: "7v5v3dn3u0dpu22sgetrb3lsj1"
                clientSecret:
                  description: Your application's client_secret
                  type: string
                  example: "1uq6hovb6tb27cpptfqmic7e0cm2tltn6k8q33eqvii62toos1ju"
                scope:
                  description: Access scope
                  type: string
                  example: "partner/partner:campaign"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - properties:
                    data:
                      $ref: "#/components/schemas/Auth"
              example:
                status: 200
                data:
                  accessToken: "eyJz93a...k4laUWw"
                  tokenType: "Bearer"
                  expiresIn: 315360000
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postAuth_400:
                  summary: "Failed to execute API cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postAuth_500:
                  summary: "Failed to execute API"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /businessUser:
    post:
      tags:
      - Business User
      summary: Create a new business user profile
      description: |
        API Endpoint for ICE Partner to creates a new business user profile

        ***Please note: Can provide businessUserId as blank while hitting this api***
      operationId: "postBusinessUser"
      requestBody:
        description: Object containing details of the new business user
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BusinessUserPayload"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - properties:
                    data:
                      $ref: "#/components/schemas/BusinessUser"
              examples:
                response_postBusinessUser_200:
                  summary: "Success creates a new business user profile"
                  value:
                    status: 200
                    data:
                      businessUserId: 4672
                      businessPartnerId: 49789
                      name: Seedbacklink
                      email: seedbacklink@seedbacklink.com
                      phoneNumber: '62854555931'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postBusinessUser_400:
                  summary: "Failed to creates a new business user profile cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postBusinessUser_401:
                  summary: "Failed  to creates a new business user profile cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postBusinessUser_500:
                  summary: "Failed to creates a new business user profile"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /businessUser/{ID}:
    get:
      tags:
      - Business User
      summary: Get business user's profile object
      description: |
        API Endpoint for ICE Partner to get business user's profile object with full details
      operationId: "getBusinessUser"
      parameters:
      - name: ID
        in: path
        description: Id of the business user
        required: true
        schema:
          type: string
          example: "456"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/BusinessUser"
              examples:
                success_getBusinessUser:
                  summary: "Get business user's profile object"
                  value:
                    status: 200
                    data:
                      businessUserId: 495
                      businessPartnerId: 2
                      name: "Baseus Official Store"
                      email: "no-reply.ed2d9cc0-6e70-40b9-b197-3b8df2906a5e@ice.id"
                      phoneNumber: 2191235297156228
                success_getBusinessUser_not_found:
                  summary: "Get business user's profile object but not found"
                  value:
                    status: 200
                    data: null
                    user_message:
                      title: "Oops, Pencarian Tidak Ditemukan"
                      message: "Coba ubah filter."
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getBusinessUser_401:
                  summary: "Failed  to get business user's profile object  cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getBusinessUser_500:
                  summary: "Failed to Get business user's profile object "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign:
    post:
      tags:
      - Campaign
      summary: "Create a campaign"
      description: |
        API Endpoint for ICE Partner to create a campaign
      operationId: "postCampaign"
      requestBody:
        description: "Object containing details of the new campaign"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampaignPayload"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - properties:
                    data:
                      $ref: "#/components/schemas/CampaignCreated"
              examples:
                response_postCampaign_200:
                  summary: "Success create a campaign"
                  value:
                    status: 200
                    data:
                      campaignId: "39847239764"
                      createdByUserId: "713827463"
                      createdByUserType: "ICE_OP"
                      createdByUserName: "Ahmed Ali"
                      forBusinessUserId: "76514983635"
                      forBusinessUserName: "Nature Shop"
                      title: "This is the title of the campaign"
                      productName: "Name of the product"
                      campaignImageLink: "https://s3.aws/image1.jpg"
                      campaignImageLinkKey: "https://s3.aws/image1.jpg"
                      description: "This is the description of this campaign."
                      objective: "This is the objective of this campaign."
                      referenceLink: "https://example.com/refLink"
                      campaignStartTimeInMillis: "763192836821"
                      campaignEndTimeInMillis: "63129836213"
                      createdTimeInMillis: "342934982374"
                      status: "DRAFT"
                      categories:
                        categoryId: "3"
                        category: "FOOD"
                      productFileLinks:
                      - link: "https://s3.aws/image1.jpg"
                        linkKey: "https://s3.aws/image1.jpg"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postCampaign_400:
                  summary: "Failed to create a campaign cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postCampaign_401:
                  summary: "Failed  to create a campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postCampaign_500:
                  summary: "Failed to create a campaign"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/{ID}:
    get:
      tags:
      - Campaign
      summary: "Get detail of campaign"
      description: |
        API Endpoint for ICE Partner to get detail of campaign
      operationId: "getCampaign"
      parameters:
      - name: "ID"
        in: "path"
        description: "Id of the campaign"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "345"
      - name: "forBusinessUserId"
        in: query
        description: "Id of business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "36"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Campaign"
              examples:
                response_getCampaign_200:
                  summary: "Get detail of campaign"
                  value:
                    status: 200
                    data:
                      campaignId: "39847239764"
                      createdByUserId: "713827463"
                      createdByUserType: "ICE_OP"
                      createdByUserName: "Ahmed Ali"
                      forBusinessUserId: "76514983635"
                      forBusinessUserName: "Nature Shop"
                      title: "This is the title of the campaign"
                      productName: "Name of the product"
                      categories:
                      - categoryId: "3"
                        category: "FOOD"
                      campaignImageLink: "https://s3.aws/image1.jpg"
                      campaignImageLinkKey: "https://s3.aws/image1.jpg"
                      productFileLinks:
                      - link: "https://s3.aws/image1.jpg"
                        linkKey: "https://s3.aws/image1.jpg"
                      description: "This is the description of this campaign."
                      objective: "This is the objective of this campaign."
                      referenceLink: "https://example.com/refLink"
                      campaignStartTimeInMillis: "763192836821"
                      campaignEndTimeInMillis: "63129836213"
                      createdTimeInMillis: "342934982374"
                      totalPrice: "4000000"
                      totalTax: "100000"
                      totalTaxDeduction: "50000"
                      totalChargeablePriceWithTaxAndDeduction: "4050000"
                      invoiceNumber: "INV/AHJDHJ/4676HG"
                      orderNumber: "429462399"
                      proofOfPaymentFileLink: "https://s3.aws/file1.pdf"
                      proofOfPaymentFileLinkKey: "https://s3.aws/file1.pdf"
                      proofOfPaymentBankName: "BCA"
                      proofOfPaymentBankAccNumber: "0000235873947"
                      isProofOfPaymentValid: false
                      proofOfPaymentRejectionReason: "Cannot open the file."
                      proofOfPaymentUpdateTimeInMillis: "923084792342"
                      status: "DRAFT"
                      rejectionReason: "Campaign rejection reason goes here"
                      subCampaigns:
                      - subCampaignId: "2759723423466"
                        campaignId: "2759723423466"
                        campaignCreatedByUserId: "4362424"
                        campaignCreatedByUserType: "BUSINESS_PARTNER"
                        campaignCreatedByUserName: "Tokopedia"
                        forBusinessUserId: "76514983635"
                        forBusinessUserName: "Nature Shop"
                        campaignTitle: "Campaign title goes here"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        campaignStartTimeInMillis: "632918649234"
                        campaignEndTimeInMillis: "632918649234"
                        categories:
                        - categoryId: "3"
                          category: "FOOD"
                        influencerId: "652149649324"
                        influencerName: "Bianca Kartika"
                        influencerCity: "Jakarta"
                        influencerProfileImageLink: "https://s3.aws.com/image1.jpg"
                        influencerProfileImageLinkKey: "https://s3.aws.com/image1.jpg"
                        socialPlatformTypeId: "2347"
                        socialPlatformType: "INSTAGRAM"
                        serviceTypeId: "1724"
                        serviceType: "FEED"
                        serviceDescription: "FEED"
                        servicePrice: "10000.00"
                        isSubServiceSelected: true
                        subServiceType: "PLUS ONE PHOTO"
                        subServicePrice: "1000.00"
                        quantity: "3"
                        price: "33000"
                        invoiceNumber: "INV/22131927873"
                        orderNumber: "5346477"
                        totalTax: "1000"
                        totalChargeablePrice: "34000"
                        isConfirmedByInfluencer: true
                        influencerRejectionReason: "(Rejection reason goes here)"
                        isConfirmedTimeInMillis: "7146239354653"
                        isContentValid: true
                        contentRejectionReason: "(Rejection reason goes here)"
                        contentUpdateTimeInMillis: "62938623957345"
                        contentFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfPostValid: true
                        proofOfPostRejectionReason: "(Rejection reason goes here)"
                        proofOfPostUpdateTimeInMillis: "62938623957345"
                        proofOfPostFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfInsightValid: true
                        proofOfInsightRejectionReason: "(Rejection reason goes here)"
                        proofOfInsightUpdateTimeInMillis: "62938623957345"
                        proofOfInsightFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        status: "NOT_ACTIVE"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getCampaign_401:
                  summary: "Failed  to get detail of campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getCampaign_500:
                  summary: "Failed to get detail of campaign "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
    put:
      tags:
      - Campaign
      summary: "Edit a campaign"
      description: |
        API Endpoint for ICE Partner to edit a campaign
      operationId: "putCampaign"
      requestBody:
        description: "Object containing details of the campaign"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampaignUpdate"
      parameters:
      - name: "ID"
        in: "path"
        description: "Id of the campaign"
        required: true
        schema:
          type: integer
          format: "int32"
          example: 342
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - properties:
                    data:
                      $ref: "#/components/schemas/Campaign"
              examples:
                response_putCampaign_200:
                  summary: "Update a campaign"
                  value:
                    status: 200
                    data:
                      campaignId: "39847239764"
                      createdByUserId: "713827463"
                      createdByUserType: "ICE_OP"
                      createdByUserName: "Ahmed Ali"
                      forBusinessUserId: "76514983635"
                      forBusinessUserName: "Nature Shop"
                      title: "This is the title of the campaign"
                      productName: "Name of the product"
                      categories:
                      - categoryId: "3"
                        category: "FOOD"
                      campaignImageLink: "https://s3.aws/image1.jpg"
                      campaignImageLinkKey: "https://s3.aws/image1.jpg"
                      productFileLinks:
                      - link: "https://s3.aws/image1.jpg"
                        linkKey: "https://s3.aws/image1.jpg"
                      description: "This is the description of this campaign."
                      objective: "This is the objective of this campaign."
                      referenceLink: "https://example.com/refLink"
                      campaignStartTimeInMillis: "763192836821"
                      campaignEndTimeInMillis: "63129836213"
                      createdTimeInMillis: "342934982374"
                      totalPrice: "4000000"
                      totalTax: "100000"
                      totalTaxDeduction: "50000"
                      totalChargeablePriceWithTaxAndDeduction: "4050000"
                      invoiceNumber: "INV/AHJDHJ/4676HG"
                      orderNumber: "429462399"
                      proofOfPaymentFileLink: "https://s3.aws/file1.pdf"
                      proofOfPaymentFileLinkKey: "https://s3.aws/file1.pdf"
                      proofOfPaymentBankName: "BCA"
                      proofOfPaymentBankAccNumber: "0000235873947"
                      isProofOfPaymentValid: false
                      proofOfPaymentRejectionReason: "Cannot open the file."
                      proofOfPaymentUpdateTimeInMillis: "923084792342"
                      status: "DRAFT"
                      rejectionReason: "Campaign rejection reason goes here"
                      subCampaigns:
                      - subCampaignId: "2759723423466"
                        campaignId: "2759723423466"
                        campaignCreatedByUserId: "4362424"
                        campaignCreatedByUserType: "BUSINESS_PARTNER"
                        campaignCreatedByUserName: "Tokopedia"
                        forBusinessUserId: "76514983635"
                        forBusinessUserName: "Nature Shop"
                        campaignTitle: "Campaign title goes here"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        campaignStartTimeInMillis: "632918649234"
                        campaignEndTimeInMillis: "632918649234"
                        categories:
                        - categoryId: "3"
                          category: "FOOD"
                        influencerId: "652149649324"
                        influencerName: "Bianca Kartika"
                        influencerCity: "Jakarta"
                        influencerProfileImageLink: "https://s3.aws.com/image1.jpg"
                        influencerProfileImageLinkKey: "https://s3.aws.com/image1.jpg"
                        socialPlatformTypeId: "2347"
                        socialPlatformType: "INSTAGRAM"
                        serviceTypeId: "1724"
                        serviceType: "FEED"
                        serviceDescription: "FEED"
                        servicePrice: "10000.00"
                        isSubServiceSelected: true
                        subServiceType: "PLUS ONE PHOTO"
                        subServicePrice: "1000.00"
                        quantity: "3"
                        price: "33000"
                        invoiceNumber: "INV/22131927873"
                        orderNumber: "5346477"
                        totalTax: "1000"
                        totalChargeablePrice: "34000"
                        isConfirmedByInfluencer: true
                        influencerRejectionReason: "(Rejection reason goes here)"
                        isConfirmedTimeInMillis: "7146239354653"
                        isContentValid: true
                        contentRejectionReason: "(Rejection reason goes here)"
                        contentUpdateTimeInMillis: "62938623957345"
                        contentFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfPostValid: true
                        proofOfPostRejectionReason: "(Rejection reason goes here)"
                        proofOfPostUpdateTimeInMillis: "62938623957345"
                        proofOfPostFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfInsightValid: true
                        proofOfInsightRejectionReason: "(Rejection reason goes here)"
                        proofOfInsightUpdateTimeInMillis: "62938623957345"
                        proofOfInsightFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        status: "NOT_ACTIVE"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putCampaign_400:
                  summary: "Failed to update a campaign  cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putCampaign_401:
                  summary: "Failed  to update a campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putCampaign_500:
                  summary: "Failed to update a campaign "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
    delete:
      tags:
      - Campaign
      summary: "Delete a campaign"
      description: |
        API Endpoint for ICE Partner to delete a campaign
      operationId: "delCampaign"
      parameters:
      - name: "ID"
        in: "path"
        description: "Id of the campaign"
        required: true
        schema:
          type: integer
          format: "int32"
          example: 342
      - name: "campaignId"
        in: query
        description: "Id of the campaign"
        required: true
        schema:
          type: integer
          format: "int32"
          example: ""
      - name: "forBusinessUserId"
        in: query
        description: "Id of the business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "36"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_delCampaign_400:
                  summary: "Failed to delete a campaign  cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_delCampaign_401:
                  summary: "Failed  to get list of campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_delCampaign_500:
                  summary: "Failed to delete a campaign "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/cart:
    get:
      tags:
      - Campaign
      summary: "Get detail of campaign cart"
      description: |
        API Endpoint for ICE Partner to get detail of campaign cart
      operationId: "getCampaignCart"
      parameters:
      - name: "campaignId"
        in: query
        description: "Id of the campaign"
        required: true
        schema:
          type: string
          example: "47612437311"
      - name: "forBusinessUserId"
        in: query
        description: "Id of business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "1"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/CampaignCart"
              examples:
                response_getCampaignCart_200:
                  summary: "Get detail of campaign cart"
                  value:
                    status: 200
                    data:
                      campaignId: "39847239764"
                      totalPrice: "4000000"
                      totalTax: "100000"
                      totalTaxDeduction: "50000"
                      totalChargeablePriceWithTaxAndDeduction: "4050000"
                      subCampaigns:
                      - subCampaignId: "2759723423466"
                        campaignId: "2759723423466"
                        campaignCreatedByUserId: "4362424"
                        campaignCreatedByUserType: "BUSINESS_PARTNER"
                        campaignCreatedByUserName: "Tokopedia"
                        forBusinessUserId: "76514983635"
                        forBusinessUserName: "Nature Shop"
                        campaignTitle: "Campaign title goes here"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        campaignStartTimeInMillis: "632918649234"
                        campaignEndTimeInMillis: "632918649234"
                        categories:
                        - categoryId: "3"
                          category: "FOOD"
                        influencerId: "652149649324"
                        influencerName: "Bianca Kartika"
                        influencerCity: "Jakarta"
                        influencerProfileImageLink: "https://s3.aws.com/image1.jpg"
                        influencerProfileImageLinkKey: "https://s3.aws.com/image1.jpg"
                        socialPlatformTypeId: "2347"
                        socialPlatformType: "INSTAGRAM"
                        serviceTypeId: "1724"
                        serviceType: "FEED"
                        serviceDescription: "FEED"
                        servicePrice: "10000.00"
                        isSubServiceSelected: true
                        subServiceType: "PLUS ONE PHOTO"
                        subServicePrice: "1000.00"
                        quantity: "3"
                        price: "33000"
                        invoiceNumber: "INV/22131927873"
                        orderNumber: "5346477"
                        totalTax: "1000"
                        totalChargeablePrice: "34000"
                        isConfirmedByInfluencer: true
                        influencerRejectionReason: "(Rejection reason goes here)"
                        isConfirmedTimeInMillis: "7146239354653"
                        isContentValid: true
                        contentRejectionReason: "(Rejection reason goes here)"
                        contentUpdateTimeInMillis: "62938623957345"
                        contentFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfPostValid: true
                        proofOfPostRejectionReason: "(Rejection reason goes here)"
                        proofOfPostUpdateTimeInMillis: "62938623957345"
                        proofOfPostFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfInsightValid: true
                        proofOfInsightRejectionReason: "(Rejection reason goes here)"
                        proofOfInsightUpdateTimeInMillis: "62938623957345"
                        proofOfInsightFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        status: "NOT_ACTIVE"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getCampaignCart_401:
                  summary: "Failed  to get detail of campaign cart cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getCampaignCart_500:
                  summary: "Failed to get detail of campaign cart"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/invoice:
    get:
      tags:
      - Campaign
      summary: "Get campaign payment invoice"
      description: |
        API Endpoint for ICE Partner to get campaign payment invoice
      operationId: "getCampaignInv"
      security:
      - JWT: []
      parameters:
      - name: campaignId
        in: query
        description: "Id of the campaign"
        required: true
        schema:
          type: string
          example: "47612437311"
      - name: forBusinessUserId
        in: query
        description: "Id of business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: 1
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/CampaignInvoice"
              examples:
                response_getPayInv_200:
                  summary: "Get payment invoice"
                  value:
                    status: 200
                    data:
                      campaignId: "632918649128"
                      invoiceNumber: "INV/AHJDHJ/4676HG"
                      orderNumber: "1213SGYWGSU"
                      paymentTimeInMillis: "734543536547"
                      paymentMethod: "Transfer Bank BCA"
                      campaignTitle: "Campaign title goes here"
                      businessUserName: "Nature Shop"
                      businessPartnerName: "Tokopedia"
                      subCampaigns:
                      - influencerId: "24235346"
                        influencerName: "Zahra Abigail"
                        serviceType: "FEED"
                        servicePrice: "10000000"
                        isSubServiceSelected: true
                        subServiceType: "Tambah 2 slide"
                        subServicePrice: "1000"
                        quantity: "3"
                        price: "30003000"
                      totalPrice: "4000000"
                      totalTax: "100000"
                      taxName: "PPN 12%"
                      totalTaxDeduction: "50000"
                      totalChargeablePriceWithTaxAndDeduction: "4050000"
                      isPaid: true
                      lastUpdatedTimeInMillis: "734543536547"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorArray"
              examples:
                response_getPayInv_401:
                  summary: "response failed Get payment invoice cause user unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Kamu tidak punya akses request ini"
                      message: "Silahkan hubungi team ICE untuk request hak akses"
                    error:
                      message: "Unauthorized"
                      reason: "unauthorized"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerErrorArray"
              examples:
                response_getPayInv_500:
                  summary: "Failed to Get payment invoice"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "Ada eror sepertinya"
                      message: "Maaf nih sepertinya ada yang salah di system kita. Sabar ya, nanti coba lagi"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/listCampaign:
    get:
      tags:
      - Campaign
      summary: "Get list of campaigns"
      description: |
        API Endpoint for ICE Partner to get list of campaigns based on supplied filters and sorting rule
      operationId: "getListCampaign"
      parameters:
      - name: "forBusinessUserId"
        in: query
        description: "Id of business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: 36
      - name: "searchQuery"
        in: query
        description: "Unilever"
        required: false
        schema:
          type: string
          example: ""
      - name: "status"
        in: query
        description: "AWAITING_PAYMENT,COMPLETED"
        required: false
        schema:
          type: string
          example: ""
      - name: "influencerId"
        in: query
        description: "1,2"
        required: false
        schema:
          type: string
          example: ""
      - name: "categoryId"
        in: query
        description: "1,2"
        required: false
        schema:
          type: string
          example: ""
      - name: "createdTimeFromInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "createdTimeToInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "startTimeFromInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "startTimeToInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "sortBy"
        in: query
        description: "Can have one of the following value: CREATED_TIME, TITLE, PRICE, INFLUENCERS_COUNT"
        required: false
        schema:
          type: string
          example: ""
      - name: "orderBy"
        in: query
        description: "Can have one of the following value: ASCENDING, DESCENDING"
        required: false
        schema:
          type: string
          example: ""
      - name: "page"
        in: query
        description: ""
        required: false
        schema:
          type: integer
          example: "1"
      - name: "pageSize"
        in: query
        description: ""
        required: false
        schema:
          type: integer
          example: "10"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/CampaignList"
              examples:
                success_getListCampaign:
                  summary: "Get list of campaign"
                  value:
                    status: 200
                    data:
                      totalRecords: 2
                      currentPage: 1
                      pageSize: 10
                      campaigns:
                      - campaignId: 39847239764
                        title: "This is the title of the campaign"
                        productName: "This is the product name of the campaign"
                        forBusinessUsername: "Nature Shop"
                        createdByUserType: "PARTNER"
                        createdByUserName: "Ahmed Ali"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        totalPrice: 10000
                        invoiceNumber: "INV/2023217/IPL/3099402376"
                        campaignStartTimeInMillis: 763192836821
                        campaignEndTimeInMillis: 63129836213
                        createdTimeInMillis: 342934982374
                        status: "DRAFT"
                        totalServices: 6
                        totalSubServices: 12
                        totalInfluencers: 4
                        totalChargeablePriceWithTaxAndDeduction: 10000
                        productFileLinks:
                        - link: "https://s3.aws/image1.jpg"
                          linkKey: "https://s3.aws/image1.jpg"
                        categories:
                        - categoryId: 3
                          category: "Food"
                success_getListCampaign_filtering_not_found:
                  summary: "Get list of campaign but not found"
                  value:
                    status: 200
                    data:
                      totalRecords: 0
                      currentPage: 1
                      pageSize: 10
                      campaigns: []
                    user_message:
                      title: "Oops, Pencarian Tidak Ditemukan"
                      message: "Coba ubah filter."
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListCampaign_401:
                  summary: "Failed  to get list of campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListCampaign_500:
                  summary: "Failed to get list of campaign"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/listSubCampaigns:
    get:
      tags:
      - Campaign
      summary: "Get list of sub campaigns"
      description: |
        API Endpoint for ICE Partner to get list of sub campaigns based on supplied filters and sorting rule
      operationId: "getListSubCampaign"
      parameters:
      - name: "forBusinessUserId"
        in: query
        description: "Id of business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "36"
      - name: "searchQuery"
        in: query
        description: "Unilever"
        required: false
        schema:
          type: string
          example: ""
      - name: "status"
        in: query
        description: "AWAITING_PAYMENT,COMPLETED"
        required: false
        schema:
          type: string
          example: ""
      - name: "influencerId"
        in: query
        description: "1,2"
        required: false
        schema:
          type: string
          example: ""
      - name: "categoryId"
        in: query
        description: "1,2"
        required: false
        schema:
          type: string
          example: ""
      - name: "createdTimeFromInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "createdTimeToInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "startTimeFromInMillis"
        in: query
        description: ""
        required: false
        schema:
          type: string
          example: ""
      - name: "startTimeToInMillis"
        in: query
        description: "6413984634"
        required: false
        schema:
          type: string
          example: ""
      - name: "sortBy"
        in: query
        description: "Can have one of the following value: CREATED_TIME, PRICE"
        required: false
        schema:
          type: string
          example: ""
      - name: "orderBy"
        in: query
        description: "Can have one of the following value: ASCENDING, DESCENDING"
        required: false
        schema:
          type: string
          example: ""
      - name: "page"
        in: query
        description: ""
        required: false
        schema:
          type: integer
          example: "1"
      - name: "pageSize"
        in: query
        description: ""
        required: false
        schema:
          type: integer
          example: "10"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/SubcampaignList"
              examples:
                success_getListSubCampaign:
                  summary: "Get list of subcampaign"
                  value:
                    status: 200
                    data:
                      totalResults: 2
                      currentPage: 1
                      pageSize: 10
                      subCampaigns:
                      - subCampaignId: 24325452
                        campaignId: 39847239764
                        campaignCreatedByUserId: 4362424
                        campaignCreatedByUserType: "BUSINESS_PARTNER"
                        campaignCreatedByUserName: "Seedbacklink"
                        forBusinessUserId: 4362424
                        forBusinessUserName: "Nature Shop"
                        campaignTitle: "Campaign title goes here"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        campaignStartTimeInMillis: 632918649234
                        campaignEndTimeInMillis: 632918649234
                        categories:
                        - categoryId: 3
                          category: "Food"
                        influencerId: 652149649324
                        influencerName: "Bianca Kartika"
                        influencerCity: "Jakarta Selatan"
                        influencerProfileImageLink: "https://s3.aws.com/image1.jpg"
                        influencerProfileImageLinkKey: "https://s3.aws.com/image1.jpg"
                        socialPlatformTypeId: 2347
                        socialPlatformType: "Instagram"
                        serviceTypeId: 1724
                        serviceType: "Feed"
                        serviceDescription: "Feed"
                        servicePrice: 10000
                        isSubServiceSelected: true
                        subServiceType: "PLUS ONE PHOTO"
                        subServicePrice: 1000
                        quantity: 3
                        price: 33000
                        invoiceNumber: "INV/22131927873"
                        orderNumber: "5346477"
                        totalTax: 1000
                        totalChargeablePrice: 34000
                        isConfirmedByInfluencer: true
                        influencerRejectionReason: "(Rejection reason goes here)"
                        isConfirmedTimeInMillis: 7146239354653
                        isContentValid: true
                        contentRejectionReason: "(Rejection reason goes here)"
                        contentUpdateTimeInMillis: 62938623957345
                        contentFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfPostValid: true
                        proofOfPostRejectionReason: "(Rejection reason goes here)"
                        proofOfPostUpdateTimeInMillis: 62938623957345
                        proofOfPostFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfInsightValid: true
                        proofOfInsightRejectionReason: "(Rejection reason goes here)"
                        proofOfInsightUpdateTimeInMillis: 62938623957345
                        proofOfInsightFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        status: "NOT_ACTIVE"
                success_getListSubCampaign_filtering_not_found:
                  summary: "Get list of subcampaign but not found"
                  value:
                    status: 200
                    data:
                      totalResults: 0
                      currentPage: 1
                      pageSize: 10
                      subCampaigns: []
                    user_message:
                      title: "Oops, Pencarian Tidak Ditemukan"
                      message: "Coba ubah filter."
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListSubCampaign_401:
                  summary: "Failed  to get list of subcampaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListSubCampaign_500:
                  summary: "Failed to get list of subcampaign"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/payment:
    put:
      tags:
      - Campaign
      summary: "Moves the campaign out of draft state"
      description: |
        API Endpoint for ICE Partner to moves the campaign out of draft state and sets status as IN_PROGRESS
      operationId: "putCampaignPay"
      requestBody:
        description: "Object containing details of payment"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CampaignPayment"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putCampaignPay_400:
                  summary: "Failed to moves the campaign out of draft state"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putCampaignPay_401:
                  summary: "Failed to moves the campaign out of draft state cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putCampaignPay_500:
                  summary: "Failed to moves the campaign out of draft state "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/subcampaign:
    post:
      tags:
      - Campaign
      summary: "Create a sub campaign"
      description: |
        API Endpoint for ICE Partner to create a sub campaign
      operationId: "postSubCampaign"
      requestBody:
        description: "Object containing sub-service details"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubCampaignPayload"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - properties:
                    data:
                      $ref: "#/components/schemas/Campaign"
              examples:
                response_postSubCampaign_200:
                  summary: "Failed to create a sub campaign cause bad parameters"
                  value:
                    status: 200
                    data:
                      campaignId: "39847239764"
                      createdByUserId: "713827463"
                      createdByUserType: "ICE_OP"
                      createdByUserName: "Ahmed Ali"
                      forBusinessUserId: "76514983635"
                      forBusinessUserName: "Nature Shop"
                      title: "This is the title of the campaign"
                      productName: "Name of the product"
                      categories:
                      - categoryId: "3"
                        category: "FOOD"
                      campaignImageLink: "https://s3.aws/image1.jpg"
                      campaignImageLinkKey: "https://s3.aws/image1.jpg"
                      productFileLinks:
                      - link: "https://s3.aws/image1.jpg"
                        linkKey: "https://s3.aws/image1.jpg"
                      description: "This is the description of this campaign."
                      objective: "This is the objective of this campaign."
                      referenceLink: "https://example.com/refLink"
                      campaignStartTimeInMillis: "763192836821"
                      campaignEndTimeInMillis: "63129836213"
                      createdTimeInMillis: "342934982374"
                      totalPrice: "4000000"
                      totalTax: "100000"
                      totalTaxDeduction: "50000"
                      totalChargeablePriceWithTaxAndDeduction: "4050000"
                      invoiceNumber: "INV/AHJDHJ/4676HG"
                      orderNumber: "429462399"
                      proofOfPaymentFileLink: "https://s3.aws/file1.pdf"
                      proofOfPaymentFileLinkKey: "https://s3.aws/file1.pdf"
                      proofOfPaymentBankName: "BCA"
                      proofOfPaymentBankAccNumber: "0000235873947"
                      isProofOfPaymentValid: false
                      proofOfPaymentRejectionReason: "Cannot open the file."
                      proofOfPaymentUpdateTimeInMillis: "923084792342"
                      status: "DRAFT"
                      rejectionReason: "Campaign rejection reason goes here"
                      subCampaigns:
                      - subCampaignId: "2759723423466"
                        campaignId: "2759723423466"
                        campaignCreatedByUserId: "4362424"
                        campaignCreatedByUserType: "BUSINESS_PARTNER"
                        campaignCreatedByUserName: "Tokopedia"
                        forBusinessUserId: "76514983635"
                        forBusinessUserName: "Nature Shop"
                        campaignTitle: "Campaign title goes here"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        campaignStartTimeInMillis: "632918649234"
                        campaignEndTimeInMillis: "632918649234"
                        categories:
                        - categoryId: "3"
                          category: "FOOD"
                        influencerId: "652149649324"
                        influencerName: "Bianca Kartika"
                        influencerCity: "Jakarta"
                        influencerProfileImageLink: "https://s3.aws.com/image1.jpg"
                        influencerProfileImageLinkKey: "https://s3.aws.com/image1.jpg"
                        socialPlatformTypeId: "2347"
                        socialPlatformType: "INSTAGRAM"
                        serviceTypeId: "1724"
                        serviceType: "FEED"
                        serviceDescription: "FEED"
                        servicePrice: "10000.00"
                        isSubServiceSelected: true
                        subServiceType: "PLUS ONE PHOTO"
                        subServicePrice: "1000.00"
                        quantity: "3"
                        price: "33000"
                        invoiceNumber: "INV/22131927873"
                        orderNumber: "5346477"
                        totalTax: "1000"
                        totalChargeablePrice: "34000"
                        isConfirmedByInfluencer: true
                        influencerRejectionReason: "(Rejection reason goes here)"
                        isConfirmedTimeInMillis: "7146239354653"
                        isContentValid: true
                        contentRejectionReason: "(Rejection reason goes here)"
                        contentUpdateTimeInMillis: "62938623957345"
                        contentFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfPostValid: true
                        proofOfPostRejectionReason: "(Rejection reason goes here)"
                        proofOfPostUpdateTimeInMillis: "62938623957345"
                        proofOfPostFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfInsightValid: true
                        proofOfInsightRejectionReason: "(Rejection reason goes here)"
                        proofOfInsightUpdateTimeInMillis: "62938623957345"
                        proofOfInsightFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        status: "NOT_ACTIVE"

        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postSubCampaign_400:
                  summary: "Failed to create a sub campaign cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postSubCampaign_401:
                  summary: "Failed  to create a sub campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postSubCampaign_500:
                  summary: "Failed to create a sub campaign"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/subcampaign/{ID}:
    delete:
      tags:
      - Campaign
      summary: "Remove a sub campaign"
      description: |
        API Endpoint for ICE Partner to remove a sub campaign
      operationId: "delSubCampaign"
      parameters:
      - name: "ID"
        in: "path"
        description: "Id of the sub-campaign"
        required: true
        schema:
          type: integer
          example: 1230873425
      - name: "forBusinessUserId"
        in: query
        description: "Id of the business user"
        required: true
        schema:
          type: integer
          example: 1230873425
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_delSubCampaign_400:
                  summary: "Failed to remove a sub campaign cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_delSubCampaign_401:
                  summary: "Failed  to remove a sub campaign cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_delSubCampaign_500:
                  summary: "Failed to remove a sub campaign"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/subcampaign/histories:
    get:
      tags:
      - Campaign
      summary: "Get sub campaign's activity history details"
      description: |
        API Endpoint for ICE Partner to get sub campaign's activity history details
      operationId: "getSubCampaignHistory"
      parameters:
      - name: "subCampaignId"
        in: query
        description: "Id of the sub-campaign"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "1"
      - name: "forBusinessUserId"
        in: query
        description: "Id of business user"
        required: true
        schema:
          type: integer
          format: "int32"
          example: "1"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/SubCampaignHistory"
              examples:
                response_getSubCampaignHistory_200:
                  summary: "Get sub campaign's activity history details"
                  value:
                    status: 200
                    data:
                      timeInMillis: "239875234646"
                      action: "ACTION_SET_CONTENT"
                      contentRevisionNumber: "0"
                      subCampaign:
                        subCampaignId: "2759723423466"
                        campaignId: "2759723423466"
                        campaignCreatedByUserId: "4362424"
                        campaignCreatedByUserType: "BUSINESS_PARTNER"
                        campaignCreatedByUserName: "Tokopedia"
                        forBusinessUserId: "76514983635"
                        forBusinessUserName: "Nature Shop"
                        campaignTitle: "Campaign title goes here"
                        campaignImageLink: "https://s3.aws/image1.jpg"
                        campaignImageLinkKey: "https://s3.aws/image1.jpg"
                        campaignStartTimeInMillis: "632918649234"
                        campaignEndTimeInMillis: "632918649234"
                        categories:
                        - categoryId: "3"
                          category: "FOOD"
                        influencerId: "652149649324"
                        influencerName: "Bianca Kartika"
                        influencerCity: "Jakarta"
                        influencerProfileImageLink: "https://s3.aws.com/image1.jpg"
                        influencerProfileImageLinkKey: "https://s3.aws.com/image1.jpg"
                        socialPlatformTypeId: "2347"
                        socialPlatformType: "INSTAGRAM"
                        serviceTypeId: "1724"
                        serviceType: "FEED"
                        serviceDescription: "FEED"
                        servicePrice: "10000.00"
                        isSubServiceSelected: true
                        subServiceType: "PLUS ONE PHOTO"
                        subServicePrice: "1000.00"
                        quantity: "3"
                        price: "33000"
                        invoiceNumber: "INV/22131927873"
                        orderNumber: "5346477"
                        totalTax: "1000"
                        totalChargeablePrice: "34000"
                        isConfirmedByInfluencer: true
                        influencerRejectionReason: "(Rejection reason goes here)"
                        isConfirmedTimeInMillis: "7146239354653"
                        isContentValid: true
                        contentRejectionReason: "(Rejection reason goes here)"
                        contentUpdateTimeInMillis: "62938623957345"
                        contentFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfPostValid: true
                        proofOfPostRejectionReason: "(Rejection reason goes here)"
                        proofOfPostUpdateTimeInMillis: "62938623957345"
                        proofOfPostFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        isProofOfInsightValid: true
                        proofOfInsightRejectionReason: "(Rejection reason goes here)"
                        proofOfInsightUpdateTimeInMillis: "62938623957345"
                        proofOfInsightFileLinks:
                        - link: "https://www.amazon.com/image.jpg"
                          linkKey: "https://www.amazon.com/image.jpg"
                        status: "NOT_ACTIVE"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getSubCampaignHistory_401:
                  summary: "Failed to get sub campaign's activity history details cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getSubCampaignHistory_500:
                  summary: "Failed to get sub campaign's activity history details"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/verifyContent:
    put:
      tags:
      - Campaign
      summary: "Verifies the sub campaign content"
      description: |
        API Endpoint for ICE Partner to verifies the sub campaign content.

        Also, moves the sub campaign from AWAITING_CONTENT_VERIFICATION status to LIVE or REJECTED status.
      operationId: "putVerifContent"
      parameters:
      - name: "subCampaignId"
        in: query
        description: ""
        required: true
        schema:
          type: integer
          format: "int32"
          example: "100"
      - name: "isContentValid"
        in: query
        description: ""
        required: true
        schema:
          type: boolean
          example: true
      - name: "rejectionReason"
        in: query
        description: "Reason why the content is invalid."
        required: false
        schema:
          type: string
          example: "Need more croud in the photo"
      - name: "forBusinessUserId"
        in: query
        description: ""
        required: true
        schema:
          type: integer
          format: "int32"
          example: "36"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifContent_400:
                  summary: "Failed to verify content cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifContent_401:
                  summary: "Failed  to verify content cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifContent_500:
                  summary: "Failed to verify content "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/verifyInsight:
    put:
      tags:
      - Campaign
      summary: "Verifies the sub campaign's proof of insight"
      description: |
        API Endpoint for ICE Partner to verifies the sub campaign's proof of insight.

        Also, moves the sub campaign from AWAITING_POI_VERIFICATION status to COMPLETED or REJECTED status.
      operationId: "putVerifInsight"
      parameters:
      - name: "subCampaignId"
        in: query
        description: ""
        required: true
        schema:
          type: integer
          format: "int32"
          example: "100"
      - name: "isProofOfInsightValid"
        in: query
        description: ""
        required: true
        schema:
          type: boolean
          example: true
      - name: "rejectionReason"
        in: query
        description: "Reason why the proof is invalid."
        required: false
        schema:
          type: string
          example: "Unable to open the file."
      - name: "forBusinessUserId"
        in: query
        description: ""
        required: true
        schema:
          type: integer
          format: "int32"
          example: "36"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifInsight_400:
                  summary: "Failed to verify insight cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifInsight_401:
                  summary: "Failed  to verify insight cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifInsight_500:
                  summary: "Failed to verify insight"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /campaign/verifyPost:
    put:
      tags:
      - Campaign
      summary: "Verifies the sub campaign's proof of post"
      description: |
        API Endpoint for ICE Partner to verifies the sub campaign's proof of post.

        Also, moves the sub campaign from AWAITING_POP_VERIFICATION status to LIVE or REJECTED status.
      operationId: "putVerifPost"
      parameters:
      - name: "subCampaignId"
        in: query
        description: ""
        required: true
        schema:
          type: integer
          format: "int32"
          example: "100"
      - name: "isProofOfPostValid"
        in: query
        description: ""
        required: true
        schema:
          type: boolean
          example: true
      - name: "rejectionReason"
        in: query
        description: "Reason why the proof is invalid."
        required: false
        schema:
          type: string
          example: "Unable to open the file."
      - name: "forBusinessUserId"
        in: query
        description: ""
        required: true
        schema:
          type: integer
          format: "int32"
          example: "36"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifPost_400:
                  summary: "Failed to verify post cause bad parameters"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifPost_401:
                  summary: "Failed  to verify post cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_putVerifPost_500:
                  summary: "Failed to verify post "
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /chats/downloadUrl:
    get:
      tags:
      - Chat
      summary: "Generate Presigned URL to download/open file"
      description: |
        API Endpoint for ICE Partner for generate Presigned URL to download/open file
      operationId: "getChatDownloadURL"
      security:
      - JWT: []
      parameters:
      - name: "key"
        in: query
        description: "Object key"
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        url:
                          type: string
              examples:
                success_getChatDownloadURL:
                  summary: "Generate Presigned URL to download/open file"
                  value:
                    status: 200
                    data:
                      url: "PresignedURL"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getChatDownloadURL_401:
                  summary: "Failed  to generate Presigned URL to download/open file cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getChatDownloadURL_500:
                  summary: "Failed to generate Presigned URL to download/open file"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /chats/histories:
    get:
      tags:
      - Chat
      summary: "Get chat history"
      description: |
        API Endpoint for ICE Partner for get chat history
      operationId: "getChatHist"
      security:
      - JWT: []
      parameters:
      - name: roomName
        in: query
        description: "name of room"
        required: true
        schema:
          type: string
      - name: lastId
        in: query
        description: "last message id"
        required: true
        schema:
          type: string
      - name: lastSortkey
        in: query
        description: "last message key"
        required: true
        schema:
          type: string
      - name: messageCount
        in: query
        description: "count message list"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/MessageHist"
              examples:
                success_getChatHist:
                  summary: "Get chat history"
                  value:
                    status: 200
                    data:
                      items:
                      - payload: 'example_payload'
                        id: "I_737_C_5776"
                        sendTime: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                        sortkey: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                      - payload: 'example_payload'
                        id: "I_737_C_5776"
                        sendTime: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                        sortkey: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                      messageLastKey:
                        id: "I_737_C_5776"
                        sendTime: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                        sortkey: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getChatHist_401:
                  summary: "Failed  to get chat list cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getChatRoom_500:
                  summary: "Failed to get chat list"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /chats/joinRoom:
    get:
      tags:
      - Chat
      summary: "Get chat room"
      description: |
        API Endpoint for ICE Partner for get chat room
      operationId: "getChatRoom"
      security:
      - JWT: []
      parameters:
      - name: roomName
        in: query
        description: "name of room"
        required: true
        schema:
          type: string
      - name: userId
        in: query
        description: "this params combine BU_{businessUserId}, example: BU_16"
        required: true
        schema:
          type: string
      - name: email
        in: query
        description: "user email"
        required: true
        schema:
          type: string
      - name: messageCount
        in: query
        description: "number of last message retrieved"
        required: true
        schema:
          type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/MessageRoom"
              examples:
                success_getChatRoom:
                  summary: "Get chat room"
                  value:
                    status: 200
                    data:
                      token: "AQICAHg6NcEa06cJt8_5UnjipPWDfjC...dNdUqteDhtPmMrhEQBgLKqoaTDEeBtU_q5SWNV-8i5YhVPgBEl8YIuOkffL1PLDnCRQCNHv1hTNRa6ibviayuw!!#0"
                      userId: "B_737"
                      userProfileImage: "ImageKeyLink"
                      roomId: "arn:aws:ivschat:us-east-1:590411560808:room/Tb90IX5N7lyI"
                      roomName: "I_737_C_5776"
                      lastMessages:
                      - payload: 'example_payload'
                        id: "I_737_C_5776"
                        sendTime: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                        sortkey: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                      roomStatus: "active"
                      messageLastKey:
                        id: "I_737_C_5776"
                        sendTime: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                        sortkey: "2024-07-18T06:20:20.935Z#I_737_C_5776_lyqvtq2w"
                      userProfileUrl: "https://cdn.estidar.com/INFLUENCER/1715915196300-mie_bebek.jpg"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getChatRoom_401:
                  summary: "Failed to get chat room cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getChatRoom_500:
                  summary: "Failed to get chat room"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /chats/rooms:
    get:
      tags:
      - Chat
      summary: "Get chat room list of business users"
      description: |
        API Endpoint for ICE Partner to get chat room list of business users
      operationId: "getListChatRooms"
      security:
      - JWT: []
      parameters:
      - name: forBusinessUserId
        in: query
        description: "Business User Id"
        schema:
          type: number
      - name: page
        in: query
        description: "Page number. Default = 1"
        schema:
          type: number
      - name: pageSize
        in: query
        description: "Page size. Default = 10"
        schema:
          type: number
      - name: querySearch
        in: query
        description: "Search keyword for influencer name"
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/BusinessUserChatRoom"
              examples:
                success_getListChatRooms:
                  summary: "Get chat room list of business users"
                  value:
                    status: 200
                    data:
                      currentPage: 1
                      pageSize: 10
                      recordCount: 1
                      items:
                      - influencerId: 23124
                        campaignId: 3483
                        roomName: "Fiesta Akhir Tahun"
                        influencerName: "Segun Adebayo"
                        campaignTitle: "Akhir Tahun Dengan Samsung Ceria"
                        subCampaignCount: 2
                        influencerImageKey: "https://s3.aws.com/image1.jpg"
                        influencerImageUrl: "https://s3.aws.com/image1.jpg"
                        lastMessage: "Sudah oke belum ya guys?"
                        messageType: "TEXT"
                        lastMessageTimeInMillis: 283427834687
                success_getListChatRooms_not_found:
                  summary: "Get chat room list of business users but not found"
                  value:
                    status: 200
                    data:
                      currentPage: 1
                      pageSize: 10
                      recordCount: 1
                      items: []
                    user_message:
                      title: "Oops, your data not found"
                      message: "Please try using another keyword"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListChatRooms_401:
                  summary: "Failed to get chat room list of business users cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListChatRooms_500:
                  summary: "Failed to get chat room list of business users"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /chats/uploadUrl:
    post:
      tags:
      - Chat
      summary: "Generate Presigned URL to upload file"
      description: |
        API Endpoint for ICE Partner to generate Presigned URL to upload file
      operationId: "postChatUploadURL"
      security:
      - JWT: []
      requestBody:
        required: true
        content:
          applcation/json:
            schema:
              type: object
              properties:
                roomName:
                  type: string
                  description: Room Name
                  example: room_name
                fileExtension:
                  description: Uploaded file extension
                  type: string
                  example: jpeg
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uploadUrl:
                          type: string
                        fileKey:
                          type: string
              examples:
                success_postChatUploadURL:
                  summary: "Generate Presigned URL to upload file"
                  value:
                    status: 200
                    data:
                      uploadUrl: string
                      fileKey: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postChatUploadURL_401:
                  summary: "Failed  to generate Presigned URL to upload file cause bad request"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postChatUploadURL_401:
                  summary: "Failed  to generate Presigned URL to upload file cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postChatUploadURL_500:
                  summary: "Failed to generate Presigned URL to upload file"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /health:
    get:
      tags:
      - Other
      summary: "Server health check API"
      description: "Server health check API"
      operationId: "healthCheck"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_healthCheck_500:
                  summary: "Failed to do health checking"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /influencer/{ID}:
    get:
      tags:
      - Influencer
      summary: "Get detail influencer"
      description: |
        API Endpoint for ICE Partner to get detail influencer
      operationId: "getInfluencer"
      parameters:
      - name: ID
        in: path
        required: true
        description: id of influencer
        schema:
          type: string
          example: "47612437311"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/BaseResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/InfluencerDtl'
              examples:
                success_getInfluencer:
                  summary: "Get detail influencer"
                  value:
                    status: 200
                    data:
                      id: "9WL0yP+aar6LozlV+gpQpw=="
                      fullName: "Segun Adebayo"
                      slug: "segun-adebayo"
                      cityName: "Surabaya"
                      description: "there is me in awesome :3"
                      joinDate: 237672842323
                      profileImageUrl: "https://cdn.ice.id/xxxxx"
                      email: "sgun.adebayo@gmail.com"
                      address: "Jalan Raya Kalimalang"
                      phoneNumber: "628123456789"
                      profileStatus: "APPROVED"
                      categories:
                      - id: "9WL0yP+aar6LozlV+gpQpw=="
                        name: "Beauty & Wellness Enthusiast"
                        slug: "beauty-welness-enthusiast"
                      - id: "9WL0yP+aar6LozlV+gpQpw=="
                        name: "Beauty & Wellness Enthusiast"
                        slug: "beauty-welness-enthusiast"
                      - id: "9WL0yP+aar6LozlV+gpQpw=="
                        name: "Beauty & Wellness Enthusiast"
                        slug: "beauty-welness-enthusiast"
                      rating:
                        totalRating: 5
                        totalReview: 92
                        totalEndorse: 92
                        detailRating:
                        - rating: 5
                          rater: 95
                        - rating: 4
                          rater: 5
                      socialPlatforms:
                      - id: "9WL0yP+aar6LozlV+gpQpw=="
                        socialPlatformTypeName: "Instagram"
                        socialPlatformTypeSlug: "instagram"
                        followers: 30000000
                        username: "segun-adebayo"
                        iconUrl: "https://cdn.estidar.com/platform/instagram.png"
                        isConnected: true
                        followersTxt: "30M"
                        latestContents:
                        - id: 40c41233-3952-45e9-b93c-46d10eac9acc
                          mediaType: "IMAGE"
                          mediaProductType: "FEED"
                          caption: "Lorem ipsum dolor sit amet"
                          thumbnailUrl: "https://s3...."
                          likeCount: 12000
                          likeCountTxt: "12K"
                          commentCount: 340
                          commentCountTxt: "340"
                          engagementRate: "1.2%"
                          permalink: "https://www.instagram.com/p/C4IUiBfSHe1/"
                          publishedAt: 1709636212000
                        insights:
                        - name: "Engagement Rate"
                          value: "1.2%"
                          iconUrl: "/assets/icon-er.png"
                          description: "This is calculated by adding the follower changes over 4 weeks and dividing by 4."
                        - name: "Avg Likes / Post"
                          value: "14K"
                          iconUrl: "/assets/icon-er.png"
                          description: "This is calculated by adding the follower changes over 4 weeks and dividing by 4."
                        followersGrowth:
                          avgGrowth: "726.382"
                          growth:
                          - period: "1 Jan - 7 Jan 24"
                            followersCount: 1800000
                            followersCountTxt: "1.8M"
                          - period: "8 Jan - 14 Jan 24"
                            followersCount: 1000000
                            followersCountTxt: "1M"
                          - period: "15 Jan - 21 Jan 24"
                            followersCount: 900000
                            followersCountTxt: "900K"
                          - period: "22 Jan - 28 Jan 24"
                            followersCount: 1000000
                            followersCountTxt: "1M"
                        rateCards:
                        - id: "9WL0yP+aar6LozlV+gpQpw=="
                          title: "Post -  Carousel 2 Post"
                          markupPrice: 500000
                          markupPriceTxt: "Rp500.000"
                          remarks: ""
                          spesifications:
                          - description: "Tidak ada revisi draft"
                            iconPath: "/assets/icon.png"
                            isTextBold: true
                          additionalCosts:
                          - subServiceId: "4526d8b1-c71b-471a-b7ff-1888b2fac272"
                            subServiceType: "Konten Jadi Milik Brand"
                            subServiceMarkupPrice: 1000000
                            subServiceMarkupPriceTxt: "Rp1.000.000"
                          - subServiceId: "4526d8b1-c71b-471a-b7ff-1888b2fac272"
                            subServiceType: "Keep Content 14 Hari"
                            subServiceMarkupPrice: 1000000
                            subServiceMarkupPriceTxt: "Rp1.000.000"
                success_getInfluencer_not_found:
                  summary: "Get detail influencer but not found"
                  value:
                    status: 200
                    data: null
                    user_message:
                      title: "Not Found"
                      message: "Influencer can not be found."
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              examples:
                response_getInfluencer_401:
                  summary: "Failed to get detail influencer cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerError'
              examples:
                response_getInfluencer_500:
                  summary: "Failed to get detail influencer"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /influencer/listInfluencer:
    get:
      tags:
      - Influencer
      summary: "Get list influencer"
      description: |
        API Endpoint for ICE Partner to get list influencer
      operationId: "getListInfluencer"
      security:
      - JWT: []
      parameters:
      - name: category
        in: query
        required: false
        description: category's slug
        schema:
          type: string
      - name: socialPlatform
        in: query
        required: false
        description: social media slug
        schema:
          type: string
      - name: gender
        in: query
        required: false
        description: influencer's gender
        schema:
          type: string
      - name: city
        in: query
        required: false
        description: influencer's city slug domicile
        schema:
          type: string
      - name: province
        in: query
        required: false
        description: influencer's province slug domicile
        schema:
          type: string
      - name: tierPrice
        in: query
        required: false
        description: influencer's price tier
        schema:
          type: string
      - name: tierFollower
        in: query
        required: false
        description: influencer's follower tier
        schema:
          type: string
      - name: page
        in: query
        required: false
        description: pagination
        schema:
          type: string
          default: 1
      - name: pageSize
        in: query
        required: false
        description: limit data per page
        schema:
          type: string
          default: 10
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/InfluencerListSchema"
              examples:
                success_getListInfluencer:
                  summary: "Get list influencer"
                  value:
                    status: 200
                    data:
                      currentPage: 1
                      pageSize: 10
                      totalRecords: 27
                      records:
                      - influencerId: 2130
                        fullName: "Iman Indonesia"
                        slug: "iman-indonesia"
                        cityId: 159
                        city: "Kota Adm. Jakarta Selatan"
                        socialPlatforms:
                        - socialPlatformTypeId: 1
                          username: "iman.indonesia"
                          noOfFollowers: 17202
                          socialPlatformType: "Instagram"
                        rating:
                          totalRating: 4.9
                          totalRater: 475
                          detailRating:
                          - rating: 5
                            rater: 428
                        minimumMarkupPrice: 1031250
                        discount: 40
                        profileImageLink: "https://cdn.ice.id/mobile/1716814739295_image_cropper_3C08FCB9-C8AC-40F6-A269-A4FE388CD01D-8926-000005C06D414862.jpg"
                success_getListInfluencer_filtering_not_found:
                  summary: "Get list influencer by filter but not found"
                  value:
                    status: 200
                    data:
                      currentPage: 1
                      pageSize: 10
                      totalRecords: 0
                      records: []
                    user_message:
                      title: "Oops, Pencarian Tidak Ditemukan"
                      message: "Coba ubah filter."
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListInfluencer_401:
                  summary: "Failed to get list influencer cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getListInfluencer_500:
                  summary: "Failed to get list influencer"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /util/downloadUrl:
    get:
      tags:
      - Util
      summary: "Generate S3 Presigned URL for downloading file"
      description: |
        API Endpoint for ICE Partner to generate S3 Presigned URL for downloading file
      operationId: "getDownloadURL"
      parameters:
      - name: "key"
        in: query
        description: "Object key"
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        url:
                          type: string
              examples:
                success_getDownloadURL:
                  summary: "Generate S3 Presigned URL for downloading file"
                  value:
                    status: 200
                    data:
                      url: "https://amazon.com/BUSINESS_PARTNER/53/810b8nl1g.jpg"

        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getDownloadURL_401:
                  summary: "Failed to generate S3 Presigned URL for downloading file cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getDownloadURL_500:
                  summary: "Failed to generate S3 Presigned URL for downloading file"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /util/metadata:
    get:
      tags:
      - Util
      summary: "List of constants"
      description: |
        API Endpoint for ICE Partner to get list cities, categories, banks, etc
      operationId: "getMetadata"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      $ref: "#/components/schemas/Metadata"
              examples:
                response_getMetadata_success:
                  summary: "Get list of constants"
                  value:
                    status: 200
                    data:
                      banks:
                      - id: 123
                        code: "ABC"
                        name: "Bank ABC"
                      countries:
                      - id: 23
                        isoCode2: "ID"
                        isoCode3: "IDN"
                        isoNumCode: "360"
                        name: "Indonesia"
                        slug: "indonesia"
                        provinces:
                        - id: 43
                          name: "DKI Jakarta"
                          slug: "dki-jakarta"
                          cities:
                          - id: 644
                            name: "Kota Adm. Jakarta Pusat"
                            slug: "kota-adm-jakarta-pusat"
                      genders:
                      - "MALE, FEMALE"
                      languages:
                      - id: 124
                        name: "English"
                      productTypes:
                      - id: 24
                        name: "Food"
                      skbTypes:
                      - "SKB_0"
                      userTypes:
                      - "INFLUENCER"
                      businessPartner:
                        accessStatuses:
                        - "ACTIVE"
                      iceOp:
                        roles:
                        - "SUPER_ADMIN"
                        accessStatuses:
                        - "ACTIVE"
                        influencer:
                          categories:
                          - id: 312
                            name: "Food"
                            slug: "food"
                          socialPlatformTypes:
                          - id: 35
                            name: "Instagram"
                            slug: "instagram"
                            serviceTypes:
                            - id: 24
                              name: "Story"
                          approvalStatuses:
                          - "APPROVED"
                      campaign:
                        statuses:
                        - "DRAFT"
                        actions:
                        - "ACTION_NON_UP_FRONT_PAYMENT"
                      subCampaign:
                        statuses:
                        - "NOT_ACTIVE"
                        actions:
                        - "ACTION_SET_CONTENT"
                      tierFollower:
                      - id: "88894637-c47a-43ad-bf82-c12f8a4d9476"
                        name: "Nano"
                        slug: "nano"
                        range: "(1.000 - 9.999)"
                      tierPrice:
                      - id: "88894637-c47a-43ad-bf82-c12f8a4d9476"
                        name: "Economy"
                        slug: "economy"
                        range: "1 Juta - 5 Juta"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getMetadata_401:
                  summary: "Failed to get list of constants cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_getMetadata_500:
                  summary: "Failed to get list of constants"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /util/metadataRefresh:
    post:
      tags:
      - Util
      summary: "Refresh metadata from DB"
      description: |
        API Endpoint for ICE Partner to refresh metadata returned in getMetaData API from DB

        ---

        ***Should NOT be called from front-end***
        *Should only be called when there are any db changes for the related data*
      operationId: "refreshMeta"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_refreshMeta_401:
                  summary: "Failed to refresh metadata from DB cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_refreshMeta_500:
                  summary: "Failed to refresh metadata from DB"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
  /util/uploadUrl:
    post:
      tags:
      - Util
      summary: "Generate S3 Presigned URL for uploading file"
      description: |
        API Endpoint for ICE Partner to generate S3 Presigned URL for uploading file
      operationId: "postUploadURL"
      requestBody:
        content:
          applcation/json:
            schema:
              type: object
              properties:
                fileExtension:
                  type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/BaseResponse"
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        uploadUrl:
                          type: string
                        fileKey:
                          type: string
              examples:
                success_postUploadURL:
                  summary: "Generate S3 Presigned URL for uploading file"
                  value:
                    status: 200
                    data:
                      uploadUrl: string
                      fileKey: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postUploadURL_401:
                  summary: "Failed to generate S3 Presigned URL for uploading file cause bad request"
                  value:
                    status: 400
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Bad Request. Please re-check your payload or request parameters"
                    error:
                      message: "Bad Request"
                      reason: "Bad Request"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postUploadURL_401:
                  summary: "Failed to generate S3 Presigned URL for uploading file cause unauthorized"
                  value:
                    status: 401
                    data: null
                    user_message:
                      title: "Failed"
                      message: "Unauthorized"
                    error:
                      message: "You are unauthorized to make the request."
                      reason: "You are unauthorized to make the request."
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerError"
              examples:
                response_postUploadURL_500:
                  summary: "Failed to generate S3 Presigned URL for uploading file"
                  value:
                    status: 500
                    data: null
                    user_message:
                      title: "There was an error"
                      message: "Please try again later"
                    error:
                      message: "Internal Server Error"
                      reason: "Internal Server Error"
components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: Auth-Token
  schemas:
    AdditionalResponse:
      type: object
      properties:
        title:
          type: string
          description: nullable
          nullable: true
          example: "{Put title to inform user}"
        message:
          type: string
          example: "{Put description to inform user}"
    Auth:
      type: object
      properties:
        accessToken:
          type: string
        tokenType:
          type: string
        expiresIn:
          type: integer
    Bank:
      type: object
      properties:
        id:
          type: integer
          example: "0"
        code:
          type: string
          example: "ABC"
        name:
          type: string
          example: "Bank Indonesia"
    BaseResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        data:
          type: object
          description: nullable
          nullable: true
          example: null
        user_message:
          allOf:
          - $ref: "#/components/schemas/AdditionalResponse"
          - required:
            - status
            - data
    BusinessUser:
      type: object
      properties:
        businessUserId:
          type: integer
          format: int64
          example: 4672
        businessPartnerId:
          type: integer
          format: int64
          example: 49789
        name:
          type: string
          example: Seedbacklink
        email:
          type: string
          example: seedbacklink@seedbacklink.com
        phoneNumber:
          type: string
          example: 62854555931
    BusinessUserChatRoom:
      type: array
      items:
        type: object
        properties:
          influencerId:
            type: string
          campaignId:
            type: string
          roomName:
            type: string
          influencerName:
            type: string
          campaignTitle:
            type: string
          subCampaignCount:
            type: integer
          influencerImageKey:
            type: string
          influencerImageUrl:
            type: string
          lastMessage:
            type: string
          messageType:
            type: string
          lastMessageTimeInMillis:
            type: integer
    BusinessUserPayload:
      type: object
      properties:
        name:
          type: string
          example: Unilever
        email:
          type: string
          example: unilever@unilever.com
        phoneNumber:
          type: string
          example: 62854555936
    Campaign:
      type: object
      properties:
        campaignId:
          type: integer
          example: "39847239764"
        createdByUserId:
          type: integer
          example: "713827463"
        createdByUserType:
          type: string
          example: "ICE_OP"
        createdByUserName:
          type: string
          example: "Ahmed Ali"
        forBusinessUserId:
          type: integer
          example: "76514983635"
        forBusinessUserName:
          type: string
          example: "Nature Shop"
        title:
          type: string
          example: "This is the title of the campaign"
        productName:
          type: string
          example: "Name of the product"
        categories:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: integer
                example: "3"
              category:
                type: string
                example: "FOOD"
        campaignImageLink:
          type: string
          example: "https://s3.aws/image1.jpg"
        campaignImageLinkKey:
          type: string
          example: "https://s3.aws/image1.jpg"
        productFileLinks:
          type: array
          items:
            type: object
            properties:
              link:
                type: string
                example: "https://s3.aws/image1.jpg"
              linkKey:
                type: string
                example: "https://s3.aws/image1.jpg"
        description:
          type: string
          example: "This is the description of this campaign."
        objective:
          type: string
          example: "This is the objective of this campaign."
        referenceLink:
          type: string
          example: "https://example.com/refLink"
        campaignStartTimeInMillis:
          type: integer
          example: "763192836821"
        campaignEndTimeInMillis:
          type: integer
          example: "63129836213"
        createdTimeInMillis:
          type: integer
          example: "342934982374"
        totalPrice:
          type: integer
          example: "4000000"
        totalTax:
          type: integer
          example: "100000"
        totalTaxDeduction:
          type: integer
          example: "50000"
        totalChargeablePriceWithTaxAndDeduction:
          type: integer
          example: "4050000"
        invoiceNumber:
          type: string
          example: "INV/AHJDHJ/4676HG"
        orderNumber:
          type: string
          example: "429462399"
        proofOfPaymentFileLink:
          type: string
          example: "https://s3.aws/file1.pdf"
        proofOfPaymentFileLinkKey:
          type: string
          example: "https://s3.aws/file1.pdf"
        proofOfPaymentBankName:
          type: string
          example: "BCA"
        proofOfPaymentBankAccNumber:
          type: string
          example: "0000235873947"
        isProofOfPaymentValid:
          type: boolean
          example: false
        proofOfPaymentRejectionReason:
          type: string
          example: "Cannot open the file."
        proofOfPaymentUpdateTimeInMillis:
          type: integer
          example: "923084792342"
        status:
          type: string
          example: "DRAFT"
        rejectionReason:
          type: string
          example: "Campaign rejection reason goes here"
        subCampaigns:
          type: array
          items:
            $ref: "#/components/schemas/SubCampaign"
    CampaignCart:
      type: object
      properties:
        campaignId:
          type: integer
          example: "39847239764"
        totalPrice:
          type: integer
          example: "4000000"
        totalTax:
          type: integer
          example: "100000"
        totalTaxDeduction:
          type: integer
          example: "50000"
        totalChargeablePriceWithTaxAndDeduction:
          type: integer
          example: "4050000"
        subCampaigns:
          type: array
          items:
            $ref: "#/components/schemas/SubCampaign"
    CampaignCreated:
      type: object
      properties:
        campaignId:
          type: integer
          example: "39847239764"
        createdByUserId:
          type: integer
          example: "713827463"
        createdByUserType:
          type: string
          example: "ICE_OP"
        createdByUserName:
          type: string
          example: "Ahmed Ali"
        forBusinessUserId:
          type: integer
          example: "76514983635"
        forBusinessUserName:
          type: string
          example: "Nature Shop"
        title:
          type: string
          example: "This is the title of the campaign"
        productName:
          type: string
          example: "Name of the product"
        campaignImageLink:
          type: string
          example: "https://s3.aws/image1.jpg"
        campaignImageLinkKey:
          type: string
          example: "https://s3.aws/image1.jpg"
        description:
          type: string
          example: "This is the description of this campaign."
        objective:
          type: string
          example: "This is the objective of this campaign."
        referenceLink:
          type: string
          example: "https://example.com/refLink"
        campaignStartTimeInMillis:
          type: integer
          example: "763192836821"
        campaignEndTimeInMillis:
          type: integer
          example: "63129836213"
        createdTimeInMillis:
          type: integer
          example: "342934982374"
        status:
          type: string
          example: "DRAFT"
        categories:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: integer
                example: "3"
              category:
                type: string
                example: "FOOD"
        productFileLinks:
          type: array
          items:
            type: object
            properties:
              link:
                type: string
                example: "https://s3.aws/image1.jpg"
              linkKey:
                type: string
                example: "https://s3.aws/image1.jpg"
    CampaignInvoice:
      type: object
      properties:
        campaignId:
          type: integer
          example: "632918649128"
        invoiceNumber:
          type: string
          example: "INV/AHJDHJ/4676HG"
        orderNumber:
          type: string
          example: "1213SGYWGSU"
        paymentTimeInMillis:
          type: integer
          example: "734543536547"
        paymentMethod:
          type: string
          example: "Transfer Bank BCA"
        campaignTitle:
          type: string
          example: "Campaign title goes here"
        businessUserName:
          type: string
          example: "Nature Shop"
        businessPartnerName:
          type: string
          example: "Tokopedia"
        subCampaigns:
          type: array
          items:
            type: object
            properties:
              influencerId:
                type: integer
                example: "24235346"
              influencerName:
                type: string
                example: "Zahra Abigail"
              serviceType:
                type: string
                example: "FEED"
              servicePrice:
                type: "number"
                format: double
                example: "10000000"
              isSubServiceSelected:
                type: boolean
                example: true
              subServiceType:
                type: string
                example: "Tambah 2 slide"
              subServicePrice:
                type: number
                format: double
                example: "1000"
              quantity:
                type: integer
                example: "3"
              price:
                type: number
                format: double
                example: "30003000"
        totalPrice:
          type: integer
          example: "4000000"
        totalTax:
          type: integer
          example: "100000"
        taxName:
          type: string
          example: "PPN 11%"
        totalTaxDeduction:
          type: integer
          example: "50000"
        totalChargeablePriceWithTaxAndDeduction:
          type: integer
          example: "4050000"
        isPaid:
          type: boolean
          example: true
        lastUpdatedTimeInMillis:
          type: integer
          example: "734543536547"
    CampaignList:
      type: object
      properties:
        totalResults:
          type: integer
          example: "100"
        pageSize:
          type: integer
          example: "10"
        currentPage:
          type: integer
          example: "2"
        campaigns:
          type: array
          items:
            $ref: "#/components/schemas/CampaignLite"
    CampaignLite:
      type: object
      properties:
        campaignId:
          type: integer
          example: "39847239764"
        title:
          type: string
          example: "This is the title of the campaign"
        productName:
          type: string
          example: "This is the product name of the campaign"
        forBusinessUserName:
          type: string
          example: "Nature Shop"
        createdByUserType:
          type: string
          example: "PARTNER"
        createdByUserName:
          type: string
          example: "Ahmed Ali"
        campaignImageLink:
          type: string
          example: "https://s3.aws/image1.jpg"
        campaignImageLinkKey:
          type: string
          example: "https://s3.aws/image1.jpg"
        totalPrice:
          type: integer
          example: "10000"
        invoiceNumber:
          type: string
          example: "INV/2023217/IPL/3099402376"
        campaignStartTimeInMillis:
          type: integer
          example: "763192836821"
        campaignEndTimeInMillis:
          type: integer
          example: "63129836213"
        createdTimeInMillis:
          type: integer
          example: "342934982374"
        status:
          type: string
          example: "DRAFT"
        totalServices:
          type: integer
          example: "6"
        totalSubServices:
          type: integer
          example: "12"
        totalInfluencers:
          type: integer
          example: "4"
        totalChargeablePriceWithTaxAndDeduction:
          type: integer
          example: "10000"
        productFileLinks:
          type: array
          items:
            type: object
            properties:
              link:
                type: string
                example: "https://s3.aws/image1.jpg"
              linkKey:
                type: string
                example: "https://s3.aws/image1.jpg"
        categories:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: integer
                example: "3"
              category:
                type: string
                example: "FOOD"
    CampaignPayload:
      type: object
      properties:
        forBusinessUserId:
          type: integer
          example: "36"
        title:
          type: string
          example: "This is the title of the campaign"
        productName:
          type: string
          example: "Name of the product"
        categoryIds:
          type: array
          items:
            type: integer
            example: "2"
        campaignImageLinkKey:
          type: string
          example: "https://s3.aws/image1.jpg"
        productFileLinkKeys:
          type: array
          items:
            type: string
            example: "https://s3.aws/image1.jpg"
        description:
          type: string
          example: "This is the description of this campaign."
        objective:
          type: string
          example: "This is the objective of this campaign."
        referenceLink:
          type: string
          example: "https://example.com/refLink"
        campaignStartTimeInMillis:
          type: integer
          example: "763192836821"
        campaignEndTimeInMillis:
          type: integer
          example: "63129836213"
    CampaignPayment:
      type: object
      properties:
        forBusinessUserId:
          type: integer
          example: "36"
        campaignId:
          type: integer
          example: "100"
        bankId:
          type: integer
          example: "999"
        bankAccNumber:
          type: string
          example: "0001011389453"
        proofOfPaymentImageLinkKey:
          type: string
          example: "https://s3.aws.com/image1.jpg"
    CampaignUpdate:
      type: object
      properties:
        campaignId:
          type: integer
          example: "100"
        forBusinessUserId:
          type: integer
          example: "36"
        title:
          type: string
          example: "This is the title of the campaign"
        productName:
          type: string
          example: "Name of the product"
        categoryIds:
          type: array
          items:
            type: integer
            example: "2"
        campaignImageLinkKey:
          type: string
          example: "https://s3.aws/image1.jpg"
        productFileLinkKeys:
          type: array
          items:
            type: string
            example: "https://s3.aws/image1.jpg"
        description:
          type: string
          example: "This is the description of this campaign."
        objective:
          type: string
          example: "This is the objective of this campaign."
        referenceLink:
          type: string
          example: "https://example.com/refLink"
        campaignStartTimeInMillis:
          type: integer
          example: "763192836821"
        campaignEndTimeInMillis:
          type: integer
          example: "63129836213"
    Category:
      type: object
      properties:
        id:
          type: integer
          example: "0"
        name:
          type: string
          example: "Food"
        slug:
          type: string
          example: "food"
    Country:
      type: object
      properties:
        id:
          type: integer
          format: "int64"
          example: "0"
        isoCode2:
          type: string
          example: "ID"
        isoCode3:
          type: string
          example: "IDN"
        isoNumCode:
          type: string
          example: "360"
        name:
          type: string
          example: "Indonesia"
        slug:
          type: string
          example: "indonesia"
        provinces:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: "int64"
                example: "0"
              name:
                type: string
                example: "DKI Jakarta"
              slug:
                type: string
                example: "dki-jakarta"
              cities:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: "0"
                    name:
                      type: string
                      example: "Kota Adm. Jakarta Pusat"
                    slug:
                      type: string
                      example: "kota-adm-jakarta-pusat"
    FollowersGrowth:
      type: object
      properties:
        avgGrowth:
          type: string
        growth:
          type: array
          items:
            $ref: '#/components/schemas/GrowthGraphData'
    GrowthGraphData:
      type: object
      properties:
        period:
          type: string
        followersCount:
          type: integer
        followersCountTxt:
          type: string
    InfluencerContents:
      type: object
      properties:
        id:
          type: string
          format: uuid
        mediaType:
          type: string
        mediaProductType:
          type: string
        caption:
          type: string
        thumbnailUrl:
          type: string
        likeCount:
          type: integer
        likeCountTxt:
          type: string
        commentCount:
          type: integer
        commentCountTxt:
          type: string
        engagementRate:
          type: string
        permalink:
          type: string
        publishedAt:
          type: integer
          format: base64
    InfluencerDtl:
      type: object
      properties:
        id:
          type: string
        fullName:
          type: string
        slug:
          type: string
        cityName:
          type: string
        description:
          type: string
        joinDate:
          type: integer
          format: base64
        profileImageUrl:
          type: string
        email:
          type: string
        address:
          type: string
        phoneNumber:
          type: string
        profileStatus:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        rating:
          $ref: '#/components/schemas/InfluencerRating'
        socialPlatforms:
          $ref: '#/components/schemas/SocialPlatforms'
    InfluencerInsights:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        iconUrl:
          type: string
        description:
          type: string
    InfluencerListRecords:
      type: object
      properties:
        influencerId:
          type: integer
        fullName:
          type: string
        slug:
          type: string
        cityId:
          type: integer
        city:
          type: string
        socialPlatforms:
          type: array
          items:
            type: object
            properties:
              socialPlatformTypeId:
                type: integer
              username:
                type: string
              noOfFollowers:
                type: integer
              socialPlatformType:
                type: string
        rating:
          type: object
          properties:
            totalRating:
              type: number
              format: float
            totalRater:
              type: integer
            detailRating:
              type: array
              items:
                type: object
                properties:
                  rating:
                    type: integer
                  rater:
                    type: integer
        minimumMarkupPrice:
          type: integer
        discount:
          type: integer
        profileImageLink:
          type: string
    InfluencerListSchema:
      type: object
      properties:
        currentPage:
          type: integer
        pageSize:
          type: integer
        totalRecords:
          type: integer
        records:
          type: array
          items:
            $ref: "#/components/schemas/InfluencerListRecords"
    InfluencerRateCards:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        markupPrice:
          type: integer
        markupPriceTxt:
          type: string
        remarks:
          type: string
        spesifications:
          type: array
          items:
            $ref: '#/components/schemas/RateCardSpec'
        additionalCosts:
          type: array
          items:
            $ref: '#/components/schemas/RateCardAddCosts'
    InfluencerRating:
      type: object
      properties:
        totalRating:
          type: integer
        totalReview:
          type: integer
        totalEndorse:
          type: integer
        detailRating:
          type: array
          items:
            $ref: '#/components/schemas/RatingDetail'
    JoinChatRoom:
      type: object
      properties:
        token:
          type: string
        userId:
          type: string
        roomId:
          type: string
        roomName:
          type: string
        roomStatus:
          type: string
        userProfileUrl:
          type: string
        userProfileImage:
          type: string
        lastMessages:
          type: array
          items:
            type: object
            properties:
              payload:
                type: string
              id:
                type: string
              sortKey:
                type: string
        messageLastKey:
          type: object
          properties:
            id:
              type: string
            sortKey:
              type: string
    Language:
      type: object
      properties:
        id:
          type: integer
          example: "0"
        name:
          type: string
          example: "English"
    Metadata:
      type: object
      properties:
        banks:
          type: array
          items:
            $ref: "#/components/schemas/Bank"
        countries:
          type: array
          items:
            $ref: "#/components/schemas/Country"
        genders:
          type: array
          items:
            type: string
            example: "MALE"
        languages:
          type: array
          items:
            $ref: "#/components/schemas/Language"
        productTypes:
          type: array
          items:
            $ref: "#/components/schemas/ProductType"
        skbTypes:
          type: array
          items:
            type: string
            example: "SKB_0"
        userTypes:
          type: array
          items:
            type: string
            example: "INFLUENCER"
        businessPartner:
          type: object
          properties:
            accessStatuses:
              type: array
              items:
                type: string
                example: "ACTIVE"
        iceOp:
          type: object
          properties:
            roles:
              type: array
              items:
                type: string
                example: "SUPER_ADMIN"
            accessStatuses:
              type: array
              items:
                type: string
                example: "ACTIVE"
        influencer:
          type: object
          properties:
            categories:
              type: array
              items:
                $ref: "#/components/schemas/Category"
            socialPlatformTypes:
              type: array
              items:
                $ref: "#/components/schemas/SocialPlatformType"
            approvalStatuses:
              type: array
              items:
                type: string
                example: "APPROVED"
        campaign:
          type: object
          properties:
            statuses:
              type: array
              items:
                type: string
                example: "DRAFT"
            actions:
              type: array
              items:
                type: string
                example: "ACTION_NON_UP_FRONT_PAYMENT"
        subCampaign:
          type: object
          properties:
            statuses:
              type: array
              items:
                type: string
                example: "NOT_ACTIVE"
            actions:
              type: array
              items:
                type: string
                example: "ACTION_SET_CONTENT"
        tierPrice:
          type: array
          items:
            $ref: "#/components/schemas/TierPrice"
        tierFollower:
          type: array
          items:
            $ref: "#/components/schemas/TierFollower"
    MessageHist:
      type: object
      properties:
        items:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/MessageList"
            - type: object
              properties:
                payload:
                  type: string
        lastKey:
          $ref: "#/components/schemas/MessageList"
    MessageList:
      type: object
      properties:
        id:
          type: string
        sendTime:
          type: string
        sortkey:
          type: string
    MessageRoom:
      type: object
      properties:
        token:
          type: string
        userId:
          type: string
        userProfileImage:
          type: string
        roomId:
          type: string
        roomName:
          type: string
        lastMessages:
          type: array
          items:
            allOf:
            - $ref: "#/components/schemas/MessageList"
            - type: object
              properties:
                payload:
                  type: string
        roomStatus:
          type: string
        messageLastKey:
          $ref: "#/components/schemas/MessageList"
        userProfileUrl:
          type: string
    ProductType:
      type: object
      properties:
        id:
          type: integer
          example: "0"
        name:
          type: string
          example: "Food"
    RateCardAddCosts:
      type: object
      properties:
        subServiceId:
          type: string
          format: uuid
        subServiceType:
          type: string
        subServiceMarkupPrice:
          type: integer
        subServiceMarkupPriceTxt:
          type: string
    RateCardSpec:
      type: object
      properties:
        description:
          type: string
        iconPath:
          type: string
        isTextBold:
          type: boolean
    RatingDetail:
      type: object
      properties:
        rating:
          type: integer
        rater:
          type: integer
    ServerError:
      allOf:
      - $ref: "#/components/schemas/BaseResponse"
      - type: object
        properties:
          data:
            type: array
            items: {}
            example: []
          user_message:
            $ref: "#/components/schemas/AdditionalResponse"
          error:
            type: object
            properties:
              message:
                type: string
              reason:
                type: string
    ServiceTypeSimple:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    SocialPlatformType:
      type: object
      properties:
        id:
          type: integer
          example: "0"
        name:
          type: string
          example: "Instagram"
        slug:
          type: string
          example: "instagram"
        serviceTypes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: "0"
              name:
                type: string
                example: "Story"
    SocialPlatforms:
      type: object
      properties:
        id:
          type: string
        socialPlatformTypeName:
          type: string
        socialPlatformTypeSlug:
          type: string
        followers:
          type: integer
        username:
          type: string
        iconUrl:
          type: string
        isConnected:
          type: boolean
        followersTxt:
          type: string
        latestContents:
          type: array
          items:
            $ref: '#/components/schemas/InfluencerContents'
        insights:
          type: array
          items:
            $ref: '#/components/schemas/InfluencerInsights'
        followersGrowth:
          $ref: '#/components/schemas/GrowthGraphData'
        rateCards:
          type: array
          items:
            $ref: '#/components/schemas/InfluencerRateCards'
    SubCampaign:
      type: object
      properties:
        subCampaignId:
          type: integer
          example: "2759723423466"
        campaignId:
          type: integer
          example: "2759723423466"
        campaignCreatedByUserId:
          type: integer
          example: "4362424"
        campaignCreatedByUserType:
          type: string
          example: "BUSINESS_PARTNER"
        campaignCreatedByUserName:
          type: string
          example: "Tokopedia"
        forBusinessUserId:
          type: integer
          example: "76514983635"
        forBusinessUserName:
          type: string
          example: "Nature Shop"
        campaignTitle:
          type: string
          example: "Campaign title goes here"
        campaignImageLink:
          type: string
          example: "https://s3.aws/image1.jpg"
        campaignImageLinkKey:
          type: string
          example: "https://s3.aws/image1.jpg"
        campaignStartTimeInMillis:
          type: integer
          example: "632918649234"
        campaignEndTimeInMillis:
          type: integer
          example: "632918649234"
        categories:
          type: array
          items:
            type: object
            properties:
              categoryId:
                type: integer
                example: "3"
              category:
                type: string
                example: "FOOD"
        influencerId:
          type: integer
          example: "652149649324"
        influencerName:
          type: string
          example: "Bianca Kartika"
        influencerCity:
          type: string
          example: "Jakarta"
        influencerProfileImageLink:
          type: string
          example: "https://s3.aws.com/image1.jpg"
        influencerProfileImageLinkKey:
          type: string
          example: "https://s3.aws.com/image1.jpg"
        socialPlatformTypeId:
          type: integer
          example: "2347"
        socialPlatformType:
          type: string
          example: "INSTAGRAM"
        serviceTypeId:
          type: integer
          example: "1724"
        serviceType:
          type: string
          example: "FEED"
        serviceDescription:
          type: string
          example: "FEED"
        servicePrice:
          type: "number"
          example: "10000.00"
        isSubServiceSelected:
          type: boolean
          example: true
        subServiceType:
          type: string
          example: "PLUS ONE PHOTO"
        subServicePrice:
          type: "number"
          example: "1000.00"
        quantity:
          type: integer
          example: "3"
        price:
          type: "number"
          example: "33000"
        invoiceNumber:
          type: string
          example: "INV/22131927873"
        orderNumber:
          type: string
          example: "5346477"
        totalTax:
          type: "number"
          example: "1000"
        totalChargeablePrice:
          type: "number"
          example: "34000"
        isConfirmedByInfluencer:
          type: boolean
          example: true
        influencerRejectionReason:
          type: string
          example: "(Rejection reason goes here)"
        isConfirmedTimeInMillis:
          type: integer
          example: "7146239354653"
        isContentValid:
          type: boolean
          example: true
        contentRejectionReason:
          type: string
          example: "(Rejection reason goes here)"
        contentUpdateTimeInMillis:
          type: integer
          example: "62938623957345"
        contentFileLinks:
          type: array
          items:
            type: object
            properties:
              link:
                type: string
                example: "https://www.amazon.com/image.jpg"
              linkKey:
                type: string
                example: "https://www.amazon.com/image.jpg"
        isProofOfPostValid:
          type: boolean
          example: true
        proofOfPostRejectionReason:
          type: string
          example: "(Rejection reason goes here)"
        proofOfPostUpdateTimeInMillis:
          type: integer
          example: "62938623957345"
        proofOfPostFileLinks:
          type: array
          items:
            type: object
            properties:
              link:
                type: string
                example: "https://www.amazon.com/image.jpg"
              linkKey:
                type: string
                example: "https://www.amazon.com/image.jpg"
        isProofOfInsightValid:
          type: boolean
          example: true
        proofOfInsightRejectionReason:
          type: string
          example: "(Rejection reason goes here)"
        proofOfInsightUpdateTimeInMillis:
          type: integer
          example: "62938623957345"
        proofOfInsightFileLinks:
          type: array
          items:
            type: object
            properties:
              link:
                type: string
                example: "https://www.amazon.com/image.jpg"
              linkKey:
                type: string
                example: "https://www.amazon.com/image.jpg"
        status:
          type: string
          example: "NOT_ACTIVE"
    SubCampaignHistory:
      type: object
      properties:
        timeInMillis:
          type: integer
          example: "239875234646"
        action:
          type: string
          example: "ACTION_SET_CONTENT"
        contentRevisionNumber:
          type: integer
          example: "0"
        subCampaign:
          $ref: "#/components/schemas/SubCampaign"
    SubcampaignList:
      type: object
      properties:
        totalResults:
          type: integer
          example: "100"
        pageSize:
          type: integer
          example: "10"
        currentPage:
          type: integer
          example: "2"
        subCampaigns:
          type: array
          items:
            $ref: "#/components/schemas/SubCampaign"
    SubCampaignPayload:
      type: object
      properties:
        forBusinessUserId:
          type: integer
          example: "36"
        campaignId:
          type: integer
          example: "100"
        serviceId:
          type: integer
          example: "109"
        isSubServiceSelected:
          type: boolean
          example: true
        subServiceId:
          type: integer
          example: "35"
        quantity:
          type: integer
          example: "1"
    TierFollower:
      type: object
      properties:
        id:
          type: string
          example: "88894637-c47a-43ad-bf82-c12f8a4d9476"
        name:
          type: string
          example: "Nano"
        slug:
          type: string
          example: "nano"
        range:
          type: string
          example: "(1.000 - 9.999)"
    TierPrice:
      type: object
      properties:
        id:
          type: string
          example: "88894637-c47a-43ad-bf82-c12f8a4d9476"
        name:
          type: string
          example: "Economy"
        slug:
          type: string
          example: "economy"
        range:
          type: string
          example: "1 Juta - 5 Juta"
